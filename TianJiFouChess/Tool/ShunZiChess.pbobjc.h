// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shunZiChess.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class InstantMessage;
@class PointMessage;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum tianJiFouMessageId

typedef GPB_ENUM(tianJiFouMessageId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  tianJiFouMessageId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  tianJiFouMessageId_KChallenge = 0,
  tianJiFouMessageId_KPutInstantMessage = 1,
  tianJiFouMessageId_KGetInstantMessage = 2,
};

GPBEnumDescriptor *tianJiFouMessageId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL tianJiFouMessageId_IsValidValue(int32_t value);

#pragma mark - ShunZiChessRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ShunZiChessRoot : GPBRootObject
@end

#pragma mark - InstantMessage

typedef GPB_ENUM(InstantMessage_FieldNumber) {
  InstantMessage_FieldNumber_Id_p = 1,
  InstantMessage_FieldNumber_From = 2,
  InstantMessage_FieldNumber_Realname = 3,
  InstantMessage_FieldNumber_Avatar = 4,
  InstantMessage_FieldNumber_Type = 5,
  InstantMessage_FieldNumber_Content = 6,
  InstantMessage_FieldNumber_CreateTime = 7,
  InstantMessage_FieldNumber_To = 8,
  InstantMessage_FieldNumber_IsGroupChat = 9,
};

/**
 * 即时消息
 **/
@interface InstantMessage : GPBMessage

/** 消息Id */
@property(nonatomic, readwrite) uint32_t id_p;

/** 消息来源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *from;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *realname;

/** 图像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/** 消息类型 0：文字消息；1：图片消息；2：音频消息 */
@property(nonatomic, readwrite) uint32_t type;

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 创建时间 */
@property(nonatomic, readwrite) uint32_t createTime;

/** 接收消息者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *to;

/** 群聊标志: true=>to为群Id; false=>to为用户Id */
@property(nonatomic, readwrite) BOOL isGroupChat;

@end

#pragma mark - PutInstantMessage

typedef GPB_ENUM(PutInstantMessage_FieldNumber) {
  PutInstantMessage_FieldNumber_From = 1,
  PutInstantMessage_FieldNumber_To = 2,
  PutInstantMessage_FieldNumber_Message = 3,
  PutInstantMessage_FieldNumber_IsGroupChat = 4,
};

/**
 * 发送即时消息
 **/
@interface PutInstantMessage : GPBMessage

/** 发送者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *from;

/** 接收者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *to;

/** 即时消息(1条) */
@property(nonatomic, readwrite, strong, null_resettable) InstantMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

/** 群聊标志: true=>to为群Id; false=>to为用户Id */
@property(nonatomic, readwrite) BOOL isGroupChat;

@end

#pragma mark - GetInstantMessage

typedef GPB_ENUM(GetInstantMessage_FieldNumber) {
  GetInstantMessage_FieldNumber_From = 1,
  GetInstantMessage_FieldNumber_To = 2,
  GetInstantMessage_FieldNumber_Message = 3,
  GetInstantMessage_FieldNumber_IsGroupChat = 4,
};

/**
 * 获取即时消息
 **/
@interface GetInstantMessage : GPBMessage

/** 发送者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *from;

/** 接收者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *to;

/** 即时消息(1条) */
@property(nonatomic, readwrite, strong, null_resettable) InstantMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

/** 群聊标志: true=>to为群Id; false=>to为用户Id */
@property(nonatomic, readwrite) BOOL isGroupChat;

@end

#pragma mark - PointMessage

typedef GPB_ENUM(PointMessage_FieldNumber) {
  PointMessage_FieldNumber_Xx = 1,
  PointMessage_FieldNumber_Yy = 2,
};

@interface PointMessage : GPBMessage

/** 横坐标 */
@property(nonatomic, readwrite) float xx;

/** 纵坐标 */
@property(nonatomic, readwrite) float yy;

@end

#pragma mark - ChallengeMessage

typedef GPB_ENUM(ChallengeMessage_FieldNumber) {
  ChallengeMessage_FieldNumber_TypeRole = 1,
  ChallengeMessage_FieldNumber_From = 2,
  ChallengeMessage_FieldNumber_To = 3,
  ChallengeMessage_FieldNumber_Point = 4,
  ChallengeMessage_FieldNumber_ChessType = 5,
};

/**
 * 发送棋子步骤
 **/
@interface ChallengeMessage : GPBMessage

/** 消息类型状态 1:我是白棋 2:我是黑棋 3:对方已退出游戏 4:对方请求悔棋 5:接受对方悔棋 6:拒绝对方悔棋 7:对方请求重来一局 8:接受对方重新来 9: 拒绝对方重新来 10:对方认输 */
@property(nonatomic, readwrite) uint32_t typeRole;

/** 发送者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *from;

/** 接收者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *to;

/** 位置 */
@property(nonatomic, readwrite, strong, null_resettable) PointMessage *point;
/** Test to see if @c point has been set. */
@property(nonatomic, readwrite) BOOL hasPoint;

/** 棋的类型: 1:五子棋，2：六洲棋 */
@property(nonatomic, readwrite) uint32_t chessType;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
